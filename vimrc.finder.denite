" 因为unit.vim和ctrlp有许多相同的功能, 所以分开, 可以让大家自由选择
" 这个主要是unite.vim 和 denite.nvim的相关插件
" 由于Denite.nvim是python支持, 所以速度比unite.vim快好多, 最终是取代unite.vim{{{
if g:isNvim
    Plug 'Shougo/denite.nvim', {'do': ':UpdateRemotePlugins'}
else
    Plug 'Shougo/denite.nvim'
endif " {{{
" Plug 'raghur/fruzzy'
Plug 'Shougo/neomru.vim'
nnoremap <silent> <leader>jf :<C-u>Denite file_mru<CR>
nnoremap <silent> <leader>lf :<C-u>Denite file/rec<CR>
nnoremap <silent> <leader>lb :<C-u>DeniteBufferDir file/rec<CR>
nnoremap <silent> <leader>fl :<C-u>Denite buffer<CR>
nnoremap <silent> <leader>ft :<C-u>Denite line<CR>
nnoremap <silent> <leader>fm :<C-u>Denite outline<CR>
" nnoremap <silent> <leader>am :<C-u>Denite menu<CR>
nnoremap <silent> <leader>gw :<C-u>Denite grep:::`expand('cword')`
" nnoremap <silent> <C-p> :<C-u>Denite -split=floating file/rec<CR>
" menu设置, 加载menu文件{{{
let g:denite_menus = {}
if exists('g:exvim_custom_path')
    let s:denite_menu_file = g:exvim_custom_path . '/denite_menu.vim'
    if filereadable(expand(s:denite_menu_file))
        exec 'source ' . fnameescape(s:denite_menu_file)
    endif
endif
"}}}

function! s:denite_detect_size() abort
    let s:denite_winheight = 20
    let s:denite_winrow = &lines > s:denite_winheight ? (&lines - s:denite_winheight) / 2 : 0
    let s:denite_winwidth = &columns > 240 ? &columns / 2 : 120
    let s:denite_wincol = &columns > s:denite_winwidth ? (&columns - s:denite_winwidth) / 2 : 0
    call denite#custom#option('_', {
                \ 'wincol': s:denite_wincol,
                \ 'winheight': s:denite_winheight,
                \ 'winrow': s:denite_winrow,
                \ 'winwidth': s:denite_winwidth,
                \ })
endfunction
" Define mappings
function! s:denite_my_settings() abort
    if exists('&winblend')
        " setlocal winblend=80
    endif
    nnoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q denite#do_map('quit')
    nnoremap <silent><buffer><expr> <ESC> denite#do_map('quit')
    nnoremap <silent><buffer><expr> i denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
    nnoremap <silent><buffer><expr> <Tab>   denite#do_map('choose_action')
    " inoremap <silent><buffer><expr> <BS>    denite#do_map('move_up_path')
endfunction
function! s:denite_filter_my_settings() abort
    if exists('&winblend')
        " setlocal winblend=100
    endif
    if exists("*ncm2#disable_for_buffer")
        call ncm2#disable_for_buffer()
    endif
    if exists("*deoplete#custom#buffer_option")
        call deoplete#custom#buffer_option('auto_complete', v:false)
    endif
    " nnoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
    nnoremap <silent><buffer><expr> <ESC>   denite#do_map('quit')
    nnoremap <silent><buffer><expr> q   denite#do_map('quit')
    " inoremap <silent><buffer><expr> <C-t>   denite#do_map('toggle_matchers', 'matcher/regexp')
    " These mappings are not recommended in doc.
    inoremap <silent><buffer> <C-j>   <Esc><C-w>p:call cursor(line('.')+1,0)<CR><C-w>pA
    inoremap <silent><buffer> <C-k>   <Esc><C-w>p:call cursor(line('.')-1,0)<CR><C-w>pA
endfunction
augroup denite_group
    autocmd!
    autocmd FileType denite call s:denite_my_settings()
    autocmd VimResized * call s:denite_detect_size()
    autocmd FileType denite-filter call s:denite_filter_my_settings()
augroup END

function! DeniteInit() abort "{{{
    " menu 设置
    " call denite#custom#var('menu', 'menus', g:denite_menus)

    " Change matchers.
    call denite#custom#source('file_mru', 'matchers', ['matcher_fuzzy'])
    call denite#custom#source('file/rec', 'matchers', ['matcher_fuzzy'])
    call denite#custom#source('file_mru', 'converters', ["converter_relative_word"])

    " 'matchers': 'matcher/fruzzy',
    call denite#custom#option('_', {
                \ 'cached_filter': v:true,
                \ 'cursor_shape': v:true,
                \ 'cursor_wrap': v:true,
                \ 'statusline': v:true,
                \ 'max_dynamic_update_candidates': 50000,
                \ 'highlight_filter_background': 'DeniteFilter',
                \ 'highlight_matched_char': 'Underlined',
                \ 'highlight_window_background': 'NormalFloat',
                \ 'prompt': '>>',
                \ 'split': 'floating',
                \ 'start_filter': v:true
                \ })

    " Ripgrep command on grep source
    " Change file_rec command.
    let s:denite_exe_command = 'rg'
    if !executable(s:denite_exe_command)
        let s:denite_exe_command = 'ag'
    endif
    if s:denite_exe_command ==? 'rg'
        " https://github.com/BurntSushi/ripgrep
        call denite#custom#var('file/rec', 'command',
                    \ ['rg', '--files',
                    \ '--glob', '!.git', '',
                    \ '--glob', '!.exvim', '',
                    \ '--glob', '!.svn', '',
                    \ '--glob', '!obj', '',
                    \ '--glob', '!bin', '',
                    \ '--glob', '!assets', '',
                    \ '--glob', '!libs', '',
                    \ '--glob', '!res', '',
                    \ '--glob', '!build', '',
                    \ '--glob', '!build32', '',
                    \ '--glob', '!lib', '',
                    \ '--glob', '!*.png', '',
                    \ '--glob', '!*.jpg', '',
                    \ '--glob', '!*.jpeg', ''
                    \ ])
        call denite#custom#var('grep', 'command', ['rg'])
        call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
        call denite#custom#var('grep', 'recursive_opts', [])
        call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
        call denite#custom#var('grep', 'separator', ['--'])
        call denite#custom#var('grep', 'final_opts', [])
    elseif s:denite_exe_command ==? 'ag'
        " https://github.com/ggreer/the_silver_searcher
        call denite#custom#var('file/rec', 'command',
                    \ ['ag', '--follow', '--nocolor', '--nogroup',
                    \ '--ignore-dir', 'obj', '',
                    \ '--ignore-dir', 'bin', '',
                    \ '--ignore-dir', 'assets', '',
                    \ '--ignore-dir', 'libs', '',
                    \ '--ignore-dir', 'res', '',
                    \ '-g', '.'])
        call denite#custom#var('grep', 'command', ['ag'])
        call denite#custom#var('grep', 'default_opts',
                    \ ['-w', '--vimgrep', '--noheading'])
    endif

    " call denite#custom#alias('source', 'file_rec/git', 'file_rec')
    call denite#custom#var('file/rec/git', 'command',
                \ ['git', 'ls-files', '-co', '--exclude-standard'])

    " Change ignore_globs
    call denite#custom#filter('matcher/ignore_globs', 'ignore_globs',
                \ [ '.exvim/', '.git/', '.ropeproject/', '__pycache__/',
                \   'env/', 'images/', '*.min.*', 'img/', 'fonts/',
                \   'build/', 'Debug/', 'Release/' , 'bin/', 'obj/'])
endfunction " }}}
call add(g:init_func_list, function('DeniteInit'))

if g:setting.status_line ==? 'airline'
    call add(g:airline_extensions, 'denite')
endif
" }}}

" vim:ts=4:sw=4:sts=4 et fdm=marker:
